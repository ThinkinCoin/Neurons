/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  ECDSAVerifier,
  ECDSAVerifierInterface,
} from "../../../../contracts/src/verifiers/ECDSAVerifier";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "owner_",
        type: "address",
      },
      {
        internalType: "address",
        name: "trustedSigner_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ECDSAInvalidSignature",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "ECDSAInvalidSignatureLength",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "ECDSAInvalidSignatureS",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidShortString",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidSignature",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ProofExpired",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "str",
        type: "string",
      },
    ],
    name: "StringTooLong",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [],
    name: "EIP712DomainChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oldSigner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newSigner",
        type: "address",
      },
    ],
    name: "TrustedSignerUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "MINT_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "nonce",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "expiry",
        type: "uint256",
      },
    ],
    name: "buildMessageHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "domainSeparator",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "eip712Domain",
    outputs: [
      {
        internalType: "bytes1",
        name: "fields",
        type: "bytes1",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "verifyingContract",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "uint256[]",
        name: "extensions",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newSigner",
        type: "address",
      },
    ],
    name: "setTrustedSigner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "trustedSigner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "proof",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "nonce",
        type: "bytes32",
      },
    ],
    name: "verify",
    outputs: [
      {
        internalType: "bool",
        name: "ok",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6101606040523480156200001257600080fd5b50604051620011f0380380620011f08339810160408190526200003591620002ae565b604080518082018252600a8152694e6575726f6e73506f4b60b01b602080830191909152825180840190935260018352603160f81b9083015290836001600160a01b038116620000a057604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b620000ab81620001c5565b50620000b982600162000215565b61012052620000ca81600262000215565b61014052815160208084019190912060e052815190820120610100524660a0526200015860e05161010051604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201529081019290925260608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b60805250503060c0526001600160a01b03821615806200017f57506001600160a01b038116155b156200019e5760405163d92e233d60e01b815260040160405180910390fd5b600380546001600160a01b0319166001600160a01b039290921691909117905550620004cc565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600060208351101562000235576200022d836200024e565b905062000248565b816200024284826200038b565b5060ff90505b92915050565b600080829050601f815111156200027c578260405163305a27a960e01b815260040162000097919062000457565b80516200028982620004a7565b179392505050565b80516001600160a01b0381168114620002a957600080fd5b919050565b60008060408385031215620002c257600080fd5b620002cd8362000291565b9150620002dd6020840162000291565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200031157607f821691505b6020821081036200033257634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200038657600081815260208120601f850160051c81016020861015620003615750805b601f850160051c820191505b8181101562000382578281556001016200036d565b5050505b505050565b81516001600160401b03811115620003a757620003a7620002e6565b620003bf81620003b88454620002fc565b8462000338565b602080601f831160018114620003f75760008415620003de5750858301515b600019600386901b1c1916600185901b17855562000382565b600085815260208120601f198616915b82811015620004285788860151825594840194600190910190840162000407565b5085821015620004475787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600060208083528351808285015260005b81811015620004865785810183015185820160400152820162000468565b506000604082860101526040601f19601f8301168501019250505092915050565b80516020808301519190811015620003325760001960209190910360031b1b16919050565b60805160a05160c05160e051610100516101205161014051610cc9620005276000396000610530015260006105030152600061065a015260006106320152600061058d015260006105b7015260006105e10152610cc96000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c8063dd98efe111610066578063dd98efe114610126578063f2fde38b14610149578063f698da251461015c578063f74d548014610164578063f76fc35e1461017757600080fd5b80630d88f22e146100a357806356a1c701146100c9578063715018a6146100de57806384b0196e146100e65780638da5cb5b14610101575b600080fd5b6100b66100b13660046109b2565b61019e565b6040519081526020015b60405180910390f35b6100dc6100d73660046109eb565b610221565b005b6100dc6102a2565b6100ee6102b6565b6040516100c09796959493929190610a53565b6000546001600160a01b03165b6040516001600160a01b0390911681526020016100c0565b610139610134366004610ae9565b6102fc565b60405190151581526020016100c0565b6100dc6101573660046109eb565b6103fa565b6100b661043d565b60035461010e906001600160a01b031681565b6100b67f111681035c86e06f2f0b742dcb0b1cb7392febbcd5d8d0f4243797191d354cc981565b604080517f111681035c86e06f2f0b742dcb0b1cb7392febbcd5d8d0f4243797191d354cc960208201526001600160a01b03861691810191909152606081018490526080810183905260a08101829052600090819060c0016040516020818303038152906040528051906020012090506102178161044c565b9695505050505050565b61022961047f565b6001600160a01b0381166102505760405163d92e233d60e01b815260040160405180910390fd5b600380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f4a297cf5d32586f80d2b0708a39d2da1f46e6ae7722171e1c51dfd685b5b8aa890600090a35050565b6102aa61047f565b6102b460006104ac565b565b6000606080600080600060606102ca6104fc565b6102d2610529565b60408051600080825260208201909252600f60f81b9b939a50919850469750309650945092509050565b6000808061030c85870187610b8e565b91509150804211156103315760405163b67a771360e01b815260040160405180910390fd5b604080517f111681035c86e06f2f0b742dcb0b1cb7392febbcd5d8d0f4243797191d354cc960208201526001600160a01b038a1691810191909152606081018890526080810185905260a0810182905260009060c00160405160208183030381529060405280519060200120905060006103aa8261044c565b905060006103b88286610556565b6003549091506001600160a01b038083169116146103e957604051638baa579f60e01b815260040160405180910390fd5b5060019a9950505050505050505050565b61040261047f565b6001600160a01b03811661043157604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b61043a816104ac565b50565b6000610447610580565b905090565b6000610479610459610580565b8360405161190160f01b8152600281019290925260228201526042902090565b92915050565b6000546001600160a01b031633146102b45760405163118cdaa760e01b8152336004820152602401610428565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60606104477f000000000000000000000000000000000000000000000000000000000000000060016106ab565b60606104477f000000000000000000000000000000000000000000000000000000000000000060026106ab565b6000806000806105668686610756565b92509250925061057682826107a3565b5090949350505050565b6000306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480156105d957507f000000000000000000000000000000000000000000000000000000000000000046145b1561060357507f000000000000000000000000000000000000000000000000000000000000000090565b610447604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b606060ff83146106c5576106be83610860565b9050610479565b8180546106d190610c43565b80601f01602080910402602001604051908101604052809291908181526020018280546106fd90610c43565b801561074a5780601f1061071f5761010080835404028352916020019161074a565b820191906000526020600020905b81548152906001019060200180831161072d57829003601f168201915b50505050509050610479565b600080600083516041036107905760208401516040850151606086015160001a6107828882858561089f565b95509550955050505061079c565b50508151600091506002905b9250925092565b60008260038111156107b7576107b7610c7d565b036107c0575050565b60018260038111156107d4576107d4610c7d565b036107f25760405163f645eedf60e01b815260040160405180910390fd5b600282600381111561080657610806610c7d565b036108275760405163fce698f760e01b815260048101829052602401610428565b600382600381111561083b5761083b610c7d565b0361085c576040516335e2f38360e21b815260048101829052602401610428565b5050565b6060600061086d8361096e565b604080516020808252818301909252919250600091906020820181803683375050509182525060208101929092525090565b600080807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08411156108da5750600091506003905082610964565b604080516000808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa15801561092e573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661095a57506000925060019150829050610964565b9250600091508190505b9450945094915050565b600060ff8216601f81111561047957604051632cd44ac360e21b815260040160405180910390fd5b80356001600160a01b03811681146109ad57600080fd5b919050565b600080600080608085870312156109c857600080fd5b6109d185610996565b966020860135965060408601359560600135945092505050565b6000602082840312156109fd57600080fd5b610a0682610996565b9392505050565b6000815180845260005b81811015610a3357602081850181015186830182015201610a17565b506000602082860101526020601f19601f83011685010191505092915050565b60ff60f81b881681526000602060e081840152610a7360e084018a610a0d565b8381036040850152610a85818a610a0d565b606085018990526001600160a01b038816608086015260a0850187905284810360c0860152855180825283870192509083019060005b81811015610ad757835183529284019291840191600101610abb565b50909c9b505050505050505050505050565b600080600080600060808688031215610b0157600080fd5b610b0a86610996565b945060208601359350604086013567ffffffffffffffff80821115610b2e57600080fd5b818801915088601f830112610b4257600080fd5b813581811115610b5157600080fd5b896020828501011115610b6357600080fd5b96999598505060200195606001359392505050565b634e487b7160e01b600052604160045260246000fd5b60008060408385031215610ba157600080fd5b823567ffffffffffffffff80821115610bb957600080fd5b818501915085601f830112610bcd57600080fd5b813581811115610bdf57610bdf610b78565b604051601f8201601f19908116603f01168101908382118183101715610c0757610c07610b78565b81604052828152886020848701011115610c2057600080fd5b826020860160208301376000602093820184015298969091013596505050505050565b600181811c90821680610c5757607f821691505b602082108103610c7757634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052602160045260246000fdfea26469706673582212207ac5bfc882266345ce108b85d41fb5239219958d5f36ec0bf9dd947ff7610f1864736f6c63430008140033";

type ECDSAVerifierConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ECDSAVerifierConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ECDSAVerifier__factory extends ContractFactory {
  constructor(...args: ECDSAVerifierConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    owner_: AddressLike,
    trustedSigner_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(owner_, trustedSigner_, overrides || {});
  }
  override deploy(
    owner_: AddressLike,
    trustedSigner_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(owner_, trustedSigner_, overrides || {}) as Promise<
      ECDSAVerifier & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ECDSAVerifier__factory {
    return super.connect(runner) as ECDSAVerifier__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ECDSAVerifierInterface {
    return new Interface(_abi) as ECDSAVerifierInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ECDSAVerifier {
    return new Contract(address, _abi, runner) as unknown as ECDSAVerifier;
  }
}
