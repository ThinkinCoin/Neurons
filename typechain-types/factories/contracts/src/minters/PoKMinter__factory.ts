/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  PoKMinter,
  PoKMinterInterface,
} from "../../../../contracts/src/minters/PoKMinter";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "owner_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AlreadyUsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ArrayLengthMismatch",
    type: "error",
  },
  {
    inputs: [],
    name: "CooldownNotMet",
    type: "error",
  },
  {
    inputs: [],
    name: "DailyLimitExceeded",
    type: "error",
  },
  {
    inputs: [],
    name: "EnforcedPause",
    type: "error",
  },
  {
    inputs: [],
    name: "ExpectedPause",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidProof",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    inputs: [],
    name: "SingleMintLimitExceeded",
    type: "error",
  },
  {
    inputs: [],
    name: "VerifierNotSet",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "minCooldown",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "maxDailyMint",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "maxSingleMint",
        type: "uint256",
      },
    ],
    name: "LimitsUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "nonce",
        type: "bytes32",
      },
    ],
    name: "MintedWithProof",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "TokenSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "verifier",
        type: "address",
      },
    ],
    name: "VerifierSet",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "recipients",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes[]",
        name: "proofs",
        type: "bytes[]",
      },
      {
        internalType: "bytes32[]",
        name: "nonces",
        type: "bytes32[]",
      },
    ],
    name: "batchMintWithProofs",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "canMint",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "dailyMintAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "nonce",
        type: "bytes32",
      },
      {
        internalType: "bool",
        name: "used",
        type: "bool",
      },
    ],
    name: "emergencySetNonceUsed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getMintingStats",
    outputs: [
      {
        internalType: "uint256",
        name: "totalMints",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalMinted",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "averageMintSize",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getNextMintTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getRemainingDailyLimit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "lastMintDay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "lastMintTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxDailyMint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxSingleMint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minCooldown",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "proof",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "nonce",
        type: "bytes32",
      },
    ],
    name: "mintWithProof",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "nonceUsed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "minCooldown_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxDailyMint_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxSingleMint_",
        type: "uint256",
      },
    ],
    name: "setLimits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token_",
        type: "address",
      },
    ],
    name: "setToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "verifier_",
        type: "address",
      },
    ],
    name: "setVerifier",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract Neurons",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalMintsProcessed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalTokensMinted",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "verifier",
    outputs: [
      {
        internalType: "contract IVerifier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052610e10600855683635c9adc5dea0000060095568056bc75e2d63100000600a5534801561003057600080fd5b5060405161163138038061163183398101604081905261004f91610109565b806001600160a01b03811661007e57604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b610087816100b9565b50600180556001600160a01b0381166100b35760405163d92e233d60e01b815260040160405180910390fd5b50610139565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561011b57600080fd5b81516001600160a01b038116811461013257600080fd5b9392505050565b6114e9806101486000396000f3fe608060405234801561001057600080fd5b50600436106101a95760003560e01c806360afa599116100f95780639db7860411610097578063dd45cea511610071578063dd45cea514610391578063ec37d259146103a4578063f2fde38b146103b7578063fc0c546a146103ca57600080fd5b80639db786041461036c578063ae80db041461037f578063d6e8b9f31461038857600080fd5b8063715018a6116100d3578063715018a6146103425780637d549e991461034a5780638456cb59146103535780638da5cb5b1461035b57600080fd5b806360afa599146102f657806361a4422b146102ff5780636aa71d181461032257600080fd5b8063325e8c25116101665780633fc08c72116101405780633fc08c72146102b557806352903583146102be5780635437988d146102d15780635c975abb146102e457600080fd5b8063325e8c25146102775780633be6f4011461029a5780633f4ba83a146102ad57600080fd5b80630d5e34a4146101ae578063144fa6d7146101d6578063189ae5f2146101eb5780632b7ac3f3146101fe5780632ddbeb52146102295780632f61b72314610257575b600080fd5b6101c16101bc366004611102565b6103dd565b60405190151581526020015b60405180910390f35b6101e96101e436600461112c565b6104b8565b005b6101e96101f936600461114e565b610531565b600354610211906001600160a01b031681565b6040516001600160a01b0390911681526020016101cd565b61024961023736600461112c565b60076020526000908152604090205481565b6040519081526020016101cd565b61024961026536600461112c565b60066020526000908152604090205481565b61027f61058e565b604080519384526020840192909252908201526060016101cd565b6101e96102a836600461117a565b6105b3565b6101e9610963565b610249600a5481565b6101e96102cc366004611217565b610975565b6101e96102df36600461112c565b61099d565b600054600160a01b900460ff166101c1565b610249600b5481565b6101c161030d366004611247565b60046020526000908152604090205460ff1681565b61024961033036600461112c565b60056020526000908152604090205481565b6101e9610a16565b610249600c5481565b6101e9610a28565b6000546001600160a01b0316610211565b61024961037a36600461112c565b610a38565b61024960095481565b61024960085481565b6101e961039f3660046112ac565b610a5f565b6102496103b236600461112c565b610e91565b6101e96103c536600461112c565b610f0f565b600254610211906001600160a01b031681565b60008054600160a01b900460ff16156103f8575060006104b2565b8115806104065750600a5482115b15610413575060006104b2565b6008546001600160a01b0384166000908152600560205260409020546104399190611386565b421015610448575060006104b2565b60006104576201518042611399565b6001600160a01b03851660009081526007602052604081205491925090821461048157600061049b565b6001600160a01b0385166000908152600660205260409020545b6009549091506104ab8583611386565b1115925050505b92915050565b6104c0610f52565b6001600160a01b0381166104e75760405163d92e233d60e01b815260040160405180910390fd5b600280546001600160a01b0319166001600160a01b0383169081179091556040517fa07c91c183e42229e705a9795a1c06d76528b673788b849597364528c96eefb790600090a250565b610539610f52565b60088390556009829055600a81905560408051848152602081018490529081018290527faa2ef8ba434f2f6bdaad3fcc2d5c35f02b08a47173c94877259407614bc46b559060600160405180910390a1505050565b600b54600c546000826105a25760006105ac565b6105ac8383611399565b9050909192565b6105bb610f7f565b6105c3610faa565b6002546001600160a01b03166105ec5760405163d92e233d60e01b815260040160405180910390fd5b6003546001600160a01b031661061557604051635fce01bb60e01b815260040160405180910390fd5b6001600160a01b03851661063c5760405163d92e233d60e01b815260040160405180910390fd5b8360000361065d5760405163162908e360e11b815260040160405180910390fd5b600a54841115610680576040516340b702bf60e01b815260040160405180910390fd5b60008181526004602052604090205460ff16156106b0576040516307b8c82160e41b815260040160405180910390fd5b6008546001600160a01b0386166000908152600560205260409020546106d69190611386565b4210156106f65760405163078a94c560e01b815260040160405180910390fd5b60006107056201518042611399565b6001600160a01b0387166000908152600760205260409020549091508114610750576001600160a01b0386166000908152600660209081526040808320839055600790915290208190555b6009546001600160a01b038716600090815260066020526040902054610777908790611386565b111561079657604051630652f4c560e21b815260040160405180910390fd5b60035460405163dd98efe160e01b81526000916001600160a01b03169063dd98efe1906107cf908a908a908a908a908a906004016113bb565b602060405180830381865afa1580156107ec573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610810919061140d565b905080610830576040516309bde33960e01b815260040160405180910390fd5b6000838152600460209081526040808320805460ff191660011790556001600160a01b038a16835260058252808320429055600690915281208054889290610879908490611386565b90915550506002546040516340c10f1960e01b81526001600160a01b03898116600483015260248201899052909116906340c10f1990604401600060405180830381600087803b1580156108cc57600080fd5b505af11580156108e0573d6000803e3d6000fd5b5050600b80549250905060006108f58361142a565b919050555085600c600082825461090c9190611386565b909155505060405186815283906001600160a01b038916907fba660b0d0f250c7d320a53059740e9b0531b2970178837b742c6ca97ec5b1e3c9060200160405180910390a3505061095c60018055565b5050505050565b61096b610f52565b610973610fd4565b565b61097d610f52565b600091825260046020526040909120805460ff1916911515919091179055565b6109a5610f52565b6001600160a01b0381166109cc5760405163d92e233d60e01b815260040160405180910390fd5b600380546001600160a01b0319166001600160a01b0383169081179091556040517f480b37e3d134e44cb444c9703493c7db564c707cb8a18cecea165f340431da1f90600090a250565b610a1e610f52565b6109736000611029565b610a30610f52565b610973611079565b6008546001600160a01b03821660009081526005602052604081205490916104b291611386565b610a67610f7f565b610a6f610faa565b8685141580610a7e5750848314155b80610a895750828114155b15610aa75760405163512509d360e11b815260040160405180910390fd5b6002546001600160a01b0316610ad05760405163d92e233d60e01b815260040160405180910390fd5b6003546001600160a01b0316610af957604051635fce01bb60e01b815260040160405180910390fd5b6000610b086201518042611399565b905060005b88811015610e7c5760008a8a83818110610b2957610b29611443565b9050602002016020810190610b3e919061112c565b90506000898984818110610b5457610b54611443565b905060200201359050366000898986818110610b7257610b72611443565b9050602002810190610b849190611459565b915091506000888887818110610b9c57610b9c611443565b60200291909101359150506001600160a01b038516610bbf575050505050610e6a565b831580610bcd5750600a5484115b15610bdc575050505050610e6a565b60008181526004602052604090205460ff1615610bfd575050505050610e6a565b6008546001600160a01b038616600090815260056020526040902054610c239190611386565b421015610c34575050505050610e6a565b6001600160a01b0385166000908152600760205260409020548714610c7c576001600160a01b0385166000908152600660209081526040808320839055600790915290208790555b6009546001600160a01b038616600090815260066020526040902054610ca3908690611386565b1115610cb3575050505050610e6a565b60035460405163dd98efe160e01b81526001600160a01b039091169063dd98efe190610ceb90889088908890889088906004016113bb565b602060405180830381865afa925050508015610d24575060408051601f3d908101601f19168201909252610d219181019061140d565b60015b610d32575050505050610e6a565b80610d4257505050505050610e6a565b506000818152600460209081526040808320805460ff191660011790556001600160a01b038816835260058252808320429055600690915281208054869290610d8c908490611386565b90915550506002546040516340c10f1960e01b81526001600160a01b03878116600483015260248201879052909116906340c10f1990604401600060405180830381600087803b158015610ddf57600080fd5b505af1158015610df3573d6000803e3d6000fd5b5050600b8054925090506000610e088361142a565b919050555083600c6000828254610e1f9190611386565b909155505060405184815281906001600160a01b038716907fba660b0d0f250c7d320a53059740e9b0531b2970178837b742c6ca97ec5b1e3c9060200160405180910390a350505050505b80610e748161142a565b915050610b0d565b5050610e8760018055565b5050505050505050565b600080610ea16201518042611399565b6001600160a01b038416600090815260076020526040812054919250908214610ecb576000610ee5565b6001600160a01b0384166000908152600660205260409020545b9050600954811015610f045780600954610eff91906114a0565b610f07565b60005b949350505050565b610f17610f52565b6001600160a01b038116610f4657604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b610f4f81611029565b50565b6000546001600160a01b031633146109735760405163118cdaa760e01b8152336004820152602401610f3d565b600054600160a01b900460ff16156109735760405163d93c066560e01b815260040160405180910390fd5b600260015403610fcd57604051633ee5aeb560e01b815260040160405180910390fd5b6002600155565b610fdc6110bc565b6000805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b611081610f7f565b6000805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861100c3390565b600054600160a01b900460ff1661097357604051638dfc202b60e01b815260040160405180910390fd5b80356001600160a01b03811681146110fd57600080fd5b919050565b6000806040838503121561111557600080fd5b61111e836110e6565b946020939093013593505050565b60006020828403121561113e57600080fd5b611147826110e6565b9392505050565b60008060006060848603121561116357600080fd5b505081359360208301359350604090920135919050565b60008060008060006080868803121561119257600080fd5b61119b866110e6565b945060208601359350604086013567ffffffffffffffff808211156111bf57600080fd5b818801915088601f8301126111d357600080fd5b8135818111156111e257600080fd5b8960208285010111156111f457600080fd5b96999598505060200195606001359392505050565b8015158114610f4f57600080fd5b6000806040838503121561122a57600080fd5b82359150602083013561123c81611209565b809150509250929050565b60006020828403121561125957600080fd5b5035919050565b60008083601f84011261127257600080fd5b50813567ffffffffffffffff81111561128a57600080fd5b6020830191508360208260051b85010111156112a557600080fd5b9250929050565b6000806000806000806000806080898b0312156112c857600080fd5b883567ffffffffffffffff808211156112e057600080fd5b6112ec8c838d01611260565b909a50985060208b013591508082111561130557600080fd5b6113118c838d01611260565b909850965060408b013591508082111561132a57600080fd5b6113368c838d01611260565b909650945060608b013591508082111561134f57600080fd5b5061135c8b828c01611260565b999c989b5096995094979396929594505050565b634e487b7160e01b600052601160045260246000fd5b808201808211156104b2576104b2611370565b6000826113b657634e487b7160e01b600052601260045260246000fd5b500490565b6001600160a01b0386168152602081018590526080604082018190528101839052828460a0830137600060a08483010152600060a0601f19601f86011683010190508260608301529695505050505050565b60006020828403121561141f57600080fd5b815161114781611209565b60006001820161143c5761143c611370565b5060010190565b634e487b7160e01b600052603260045260246000fd5b6000808335601e1984360301811261147057600080fd5b83018035915067ffffffffffffffff82111561148b57600080fd5b6020019150368190038213156112a557600080fd5b818103818111156104b2576104b261137056fea26469706673582212200101121764c610b11527d44bfcc8fadd137a4d2c676f35aadaac3565501180ff64736f6c63430008140033";

type PoKMinterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PoKMinterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PoKMinter__factory extends ContractFactory {
  constructor(...args: PoKMinterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    owner_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(owner_, overrides || {});
  }
  override deploy(
    owner_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(owner_, overrides || {}) as Promise<
      PoKMinter & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): PoKMinter__factory {
    return super.connect(runner) as PoKMinter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PoKMinterInterface {
    return new Interface(_abi) as PoKMinterInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): PoKMinter {
    return new Contract(address, _abi, runner) as unknown as PoKMinter;
  }
}
